// Line curvature Sq gradient
import constants
import meshtools

var np=10
var R=1

var m = LineMesh(fn (t) [R*cos(t), R*sin(t),0], 0...2*Pi:2*Pi/np, closed=true)

// Create the manifold
var lc = LineCurvatureSq()

print lc.total(m)
// expect: 6.38774

var grad = lc.gradient(m)

var dim = grad.dimensions()
var ngrad = Matrix(dim[0], dim[1])

// Manually calculate the gradient
var vert = m.vertexmatrix()
var eps = 1e-8

for (i in 0...dim[0]) {
  for (j in 0...dim[1]) {
    var v = vert[i, j]
    vert[i, j] = v + eps
    var fp = lc.total(m)
    vert[i, j] = v - eps
    var fm = lc.total(m)
    ngrad[i,j] = (fp-fm)/(2*eps)
  }
}

print (grad-ngrad).norm()/grad.count() < 1e-6 // expect: true
