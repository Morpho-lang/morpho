import meshtools
import plot
import functionals

var L = 1.0
var dx = 0.1

var m = AreaMesh(fn (u, v) [u, v, 0], -L/2..L/2:dx, -L/2..L/2:dx)
m.addgrade(1)

fn mhdgrad(x,y,z,x0,y0,varphi){
return Matrix([(y-y0)/((x-x0)^2+(y-y0)^2)/2,-(x-x0)/((x-x0)^2+(y-y0)^2)/2])
}
fn phdgrad(x,y,z,x0,y0,varphi){
return Matrix([-(y-y0)/((x-x0)^2+(y-y0)^2)/2,(x-x0)/((x-x0)^2+(y-y0)^2)/2])
}
var defectsGrad = Field(m, fn(x,y,z) phdgrad(x, y, z, 0.25, 0, 0)+mhdgrad(x, y, z, -0.25, 0, 0) )

var directorIntegral = LineIntegral(fn (x,n) 1/(2*Pi) * n.inner(tangent()), defectsGrad)

var fe = directorIntegral.integrand(m)
//expect error 'MtrxIncmptbl'