// Mean Sq curvature
import implicitmesh
import plot

// Make a sphere
var impl = ImplicitMeshBuilder(fn (x,y,z) x^2+y^2+z^2-1)
var m = impl.build(stepsize=0.25)

// Mean Squared curvature
var lc = MeanCurvatureSq()
var grad = lc.gradient(m)

var dim = grad.dimensions()
var ngrad = Matrix(dim[0], dim[1])

// Manually calculate the gradient
var vert = m.vertexmatrix()
var eps = 1e-8

for (i in 0...dim[0]) {
  for (j in 0...dim[1]) {
    var v = vert[i, j]
    vert[i, j] = v + eps
    var fp = lc.total(m)
    vert[i, j] = v - eps
    var fm = lc.total(m)
    ngrad[i,j] = (fp-fm)/(2*eps)
  }
}

print (grad-ngrad).norm()/grad.count() < 1e-4 // expect: true
