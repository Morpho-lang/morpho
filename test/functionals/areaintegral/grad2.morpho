import constants
import meshtools

var m = AreaMesh(fn (x,y) [x,y,0], 0..1:0.5, 0..1:0.5)

var f = Field(m, fn (x,y,z) x)
var g = Field(m, fn (x,y,z) 2*y)
var g2 = Field(m, fn (x,y,z) 2*y+0.001*x)
var h = Field(m, fn (x,y,z) x+4*y)

fn integrand(x, n) {
    var g = grad(n) 
    return g.inner(g)
}

print AreaIntegral(integrand, f).total(m)
// expect: 1

print AreaIntegral(fn (x, fl, gl) grad(g).norm(), f, g).total(m)
// expect: 2

print AreaIntegral(fn (x, fl, gl) grad(f).inner(grad(g2)), f, g2).total(m)
// expect: 0.001

print AreaIntegral(fn (x, g, h) grad(g2).inner(grad(h)), g2, h).total(m)
// expect: 8.001

print AreaIntegral(fn (x, fl, gl) grad(fl).inner(grad(g)), f, g).total(m)
// expect error 'IntgrlAmbgsFld'