// Ranges

// Default step is 1
var a = Range(1,3)
print a
// expect: 1..3
for (x in a) print x
// expect: 1
// expect: 2
// expect: 3

// Set a stepsize; upper limit is included
a = Range(1,5,2)
print a
// expect: 1..5:2
for (x in a) print x
// expect: 1
// expect: 3
// expect: 5

// Step in reverse
a = Range(-0.1,-0.5,-0.1)
print a
// expect: -0.1..-0.5:-0.1
for (x in a) print x
// expect: -0.1
// expect: -0.2
// expect: -0.3
// expect: -0.4
// expect: -0.5

// Step in reverse in an incommensurate way
a = Range(-0.1,-0.5,-0.13)
print a
// expect: -0.1..-0.5:-0.13
for (x in a) print x
// expect: -0.1
// expect: -0.23
// expect: -0.36
// expect: -0.49

// Inconsistent steps yield no elements
a = Range(-0.1,-0.5,0.13)
print a
// expect: -0.1..-0.5:0.13
for (x in a) print x

// Range with only one element
a = Range(5,5)
print a
// expect: 5..5
for (x in a) print x
// expect: 5
