class Toggle {
  init(startState) {
    self.state = startState
  }

  value() { return self.state }

  activate() {
    self.state = !self.state
    return self
  }
}

class NthToggle < Toggle {
  init(startState, maxCounter) {
    super.init(startState)
    self.countMax = maxCounter
    self.count = 0
  }

  activate() {
    self.count += 1
    if (self.count >= self.countMax) {
      super.activate()
      self.count = 0
    }

    return self
  }
}

var start = clock()
var n = 100000
var val = true
var toggle = Toggle(val)

for (i in 0...n) {
  val = toggle.activate().value()
  val = toggle.activate().value()
  val = toggle.activate().value()
  val = toggle.activate().value()
  val = toggle.activate().value()
  val = toggle.activate().value()
  val = toggle.activate().value()
  val = toggle.activate().value()
  val = toggle.activate().value()
  val = toggle.activate().value()
}

print toggle.value()

val = true
var ntoggle = NthToggle(val, 3)

for (i in 0...n) {
  val = ntoggle.activate().value()
  val = ntoggle.activate().value()
  val = ntoggle.activate().value()
  val = ntoggle.activate().value()
  val = ntoggle.activate().value()
  val = ntoggle.activate().value()
  val = ntoggle.activate().value()
  val = ntoggle.activate().value()
  val = ntoggle.activate().value()
  val = ntoggle.activate().value()
}

print ntoggle.value()
print "elapsed: ${clock() - start}"
