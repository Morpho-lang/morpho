// Demonstrate use of the povray module to raytrace graphics.
// Additionally, demonstrate the use of the transmit and filter
// attributes in the Graphics objects. These attributes are used by
// povray to make the graphics transparent.
import constants
import color
import plot
import povray
import meshtools

var transmit = 0.5
var filter = 0.5

fn demo() {

    var m1 = AreaMesh(fn (u,v) [u,v,-1], -1..1:0.5, -1..1:0.5)
    var m2 = AreaMesh(fn (u,v) [u,1,v], -1..1:0.2, -1..1:0.2)

    var gauss = Field(m2, fn(x,y,z) exp(-x^2-z^2))
    var g = plotmesh(m1)
    g = g + plotfield(gauss, style="interpolate")

    // Plot Blue spheres with increasing transmit values
    g.display(Sphere(Matrix([-0.45,0.8,-0.8]), 0.1, color=Blue))
    g.display(Sphere(Matrix([-0.15,0.8,-0.8]), 0.1, color=Blue, transmit=0.1))
    g.display(Sphere(Matrix([0.15,0.8,-0.8]), 0.1, color = Blue, transmit = 0.4))
    g.display(Sphere(Matrix([0.45, 0.8, -0.8]), 0.1, color = Blue, transmit = 0.7))
    
    // Plot Blue spheres with increasing filter values.
    // Note the difference in the color of the shadow from the transmit ones.
    g.display(Sphere(Matrix([-0.45,0.4,-0.8]), 0.1, color=Red))
    g.display(Sphere(Matrix([-0.15,0.4,-0.8]), 0.1, color=Red, filter = 0.1))
    g.display(Sphere(Matrix([0.15,0.4,-0.8]), 0.1, color = Red, filter = 0.4))
    g.display(Sphere(Matrix([0.45, 0.4, -0.8]), 0.1, color = Red, filter = 0.7))
    
    // Test all the other Graphics objects with transmit and filter
    g.display(Arrow([-0.5, 0.0, -0.8], [-0.1, 0.0, -0.8], color = Blue, transmit = 0.75))
    g.display(Arrow([0.1, 0.0, -0.8], [0.5, 0.0, -0.8], color = Red, filter = 0.75))
    
    g.display(Cylinder([-0.5, -0.4, -0.8], [-0.1, -0.4, -0.8], color = Blue, transmit = 0.75))
    g.display(Cylinder([0.1, -0.4, -0.8], [0.5, -0.4, -0.8], color = Red, filter = 0.75))
        
    var pts1 = [[-0.3, -0.75, -0.8], [-0.4, -0.85, -0.8], [-0.2, -0.85, -0.8], [-0.3, -0.75, -0.8]]
    var pts2 = [[0.3, -0.75, -0.8], [0.2, -0.85, -0.8], [0.4, -0.85, -0.8], [0.3, -0.75, -0.8]]
    g.display(Tube(pts1, 0.02, color=Blue, transmit = 0.75) )
    g.display(Tube(pts2, 0.02, color=Red, filter = 0.75) )
    g.background = White

    return g
}

var g = demo()

var pov = POVRaytracer(g)
pov.viewpoint = Matrix([-1.2, -6, 3.6])
pov.viewangle = 35
// pov.light = [Matrix([10, 10, 10]), Matrix([-10, -10, 10])]
pov.light =[Matrix([-10, -10, 10])]
pov.render("out.pov")

Show(g)
